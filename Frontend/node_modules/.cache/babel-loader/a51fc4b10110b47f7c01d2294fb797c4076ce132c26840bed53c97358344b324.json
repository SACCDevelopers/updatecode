{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sameer Shahzad\\\\Desktop\\\\quiz\\\\testing\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChemistryResults = () => {\n  _s();\n  const barChartRef = useRef(null);\n  const pieChartRef = useRef(null);\n  const lineChartRef = useRef(null);\n  const [barChartInstance, setBarChartInstance] = useState(null);\n  const [pieChartInstance, setPieChartInstance] = useState(null);\n  const [lineChartInstance, setLineChartInstance] = useState(null);\n  const [chemistryResults, setChemistryResults] = useState({\n    obtainedMarks: 0,\n    totalMarks: 0,\n    percentage: 0\n  });\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await fetch('/results/chemistry');\n        const data = await res.json();\n        setChemistryResults(data);\n\n        // Check if there's an existing bar chart instance and destroy it\n        if (barChartInstance) {\n          barChartInstance.destroy();\n        }\n\n        // Create a new bar chart instance\n        const barChartInstance = new Chart(barChartRef.current, {\n          type: 'bar',\n          data: {\n            labels: ['Obtained Marks', 'Total Marks'],\n            datasets: [{\n              label: 'Chemistry Results',\n              data: [data.obtainedMarks, data.totalMarks],\n              backgroundColor: ['#36a2eb', '#ebed36']\n            }]\n          },\n          options: {\n            scales: {\n              y: {\n                beginAtZero: true\n              }\n            }\n          }\n        });\n        setBarChartInstance(barChartInstance);\n\n        // Check if there's an existing pie chart instance and destroy it\n        if (pieChartInstance) {\n          pieChartInstance.destroy();\n        }\n\n        // Create a new pie chart instance\n        const pieChartInstance = new Chart(pieChartRef.current, {\n          type: 'doughnut',\n          data: {\n            labels: ['Obtained Marks', 'Remaining Marks'],\n            datasets: [{\n              data: [data.obtainedMarks, data.totalMarks - data.obtainedMarks],\n              backgroundColor: ['#36a2eb', '#ebed36']\n            }]\n          },\n          options: {\n            plugins: {\n              legend: {\n                position: 'bottom'\n              }\n            }\n          }\n        });\n        setPieChartInstance(pieChartInstance);\n\n        // Check if there's an existing line chart instance and destroy it\n        if (lineChartInstance) {\n          lineChartInstance.destroy();\n        }\n\n        // Create a new line chart instance\n        const lineChartInstance = new Chart(lineChartRef.current, {\n          type: 'line',\n          data: {\n            labels: ['Test 1', 'Test 2', 'Test 3'],\n            datasets: [{\n              label: 'Obtained Marks',\n              data: [20, 35, 40],\n              borderColor: '#36a2eb',\n              fill: false\n            }, {\n              label: 'Total Marks',\n              data: [30, 40, 50],\n              borderColor: '#ebed36',\n              fill: false\n            }]\n          },\n          options: {\n            scales: {\n              y: {\n                beginAtZero: true\n              }\n            }\n          }\n        });\n        setLineChartInstance(lineChartInstance);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchData();\n  }, [barChartInstance, pieChartInstance, lineChartInstance]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chemistry All Quizzes Average\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef,\n        width: \"400\",\n        height: \"400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(ChemistryResults, \"mCuo/2B7kwNrQO+P32zSxx0dAQ0=\");\n_c = ChemistryResults;\nexport default ChemistryPieChart;\nvar _c;\n$RefreshReg$(_c, \"ChemistryResults\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chart","jsxDEV","_jsxDEV","ChemistryResults","_s","barChartRef","pieChartRef","lineChartRef","barChartInstance","setBarChartInstance","pieChartInstance","setPieChartInstance","lineChartInstance","setLineChartInstance","chemistryResults","setChemistryResults","obtainedMarks","totalMarks","percentage","fetchData","res","fetch","data","json","destroy","current","type","labels","datasets","label","backgroundColor","options","scales","y","beginAtZero","plugins","legend","position","borderColor","fill","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","chartRef","width","height","_c","ChemistryPieChart","$RefreshReg$"],"sources":["C:/Users/Sameer Shahzad/Desktop/quiz/testing/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js/auto';\n\nconst ChemistryResults = () => {\n  const barChartRef = useRef(null);\n  const pieChartRef = useRef(null);\n  const lineChartRef = useRef(null);\n  const [barChartInstance, setBarChartInstance] = useState(null);\n  const [pieChartInstance, setPieChartInstance] = useState(null);\n  const [lineChartInstance, setLineChartInstance] = useState(null);\n  const [chemistryResults, setChemistryResults] = useState({\n    obtainedMarks: 0,\n    totalMarks: 0,\n    percentage: 0,\n  });\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await fetch('/results/chemistry');\n        const data = await res.json();\n        setChemistryResults(data);\n\n        // Check if there's an existing bar chart instance and destroy it\n        if (barChartInstance) {\n          barChartInstance.destroy();\n        }\n\n        // Create a new bar chart instance\n        const barChartInstance = new Chart(barChartRef.current, {\n          type: 'bar',\n          data: {\n            labels: ['Obtained Marks', 'Total Marks'],\n            datasets: [\n              {\n                label: 'Chemistry Results',\n                data: [data.obtainedMarks, data.totalMarks],\n                backgroundColor: ['#36a2eb', '#ebed36'],\n              },\n            ],\n          },\n          options: {\n            scales: {\n              y: {\n                beginAtZero: true,\n              },\n            },\n          },\n        });\n        setBarChartInstance(barChartInstance);\n\n        // Check if there's an existing pie chart instance and destroy it\n        if (pieChartInstance) {\n          pieChartInstance.destroy();\n        }\n\n        // Create a new pie chart instance\n        const pieChartInstance = new Chart(pieChartRef.current, {\n          type: 'doughnut',\n          data: {\n            labels: ['Obtained Marks', 'Remaining Marks'],\n            datasets: [\n              {\n                data: [data.obtainedMarks, data.totalMarks - data.obtainedMarks],\n                backgroundColor: ['#36a2eb', '#ebed36'],\n              },\n            ],\n          },\n          options: {\n            plugins: {\n              legend: {\n                position: 'bottom',\n              },\n            },\n          },\n        });\n        setPieChartInstance(pieChartInstance);\n\n        // Check if there's an existing line chart instance and destroy it\n        if (lineChartInstance) {\n          lineChartInstance.destroy();\n        }\n\n        // Create a new line chart instance\n        const lineChartInstance = new Chart(lineChartRef.current, {\n          type: 'line',\n          data: {\n            labels: ['Test 1', 'Test 2', 'Test 3'],\n            datasets: [\n              {\n                label: 'Obtained Marks',\n                data: [20, 35, 40],\n                borderColor: '#36a2eb',\n                fill: false,\n              },\n              {\n                label: 'Total Marks',\n                data: [30, 40, 50],\n                borderColor: '#ebed36',\n                fill: false,\n              },\n            ],\n          },\n          options: {\n            scales: {\n              y: {\n                beginAtZero: true,\n              },\n            },\n          },\n        });\n        setLineChartInstance(lineChartInstance);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    fetchData();\n  }, [barChartInstance, pieChartInstance, lineChartInstance]);\n\n  return (\n    <div>\n      <h2>Chemistry All Quizzes Average</h2>\n      <div className=\"chart-container\">\n        <canvas ref={chartRef} width=\"400\" height=\"400\" />\n      </div>\n    </div>\n  );\n};\n\nexport default ChemistryPieChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}