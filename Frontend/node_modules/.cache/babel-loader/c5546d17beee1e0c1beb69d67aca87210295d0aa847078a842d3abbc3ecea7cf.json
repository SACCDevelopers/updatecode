{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sameer Shahzad\\\\Desktop\\\\quiz\\\\testing\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Import dependencies\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n// Define the component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [totalTime, setTotalTime] = useState(0);\n  const [timeTaken, setTimeTaken] = useState(0);\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    // Fetch data from the backend API\n    axios.get('http://localhost:5000/api/results').then(res => {\n      const {\n        totalTime,\n        timeTaken\n      } = res.data;\n      setTotalTime(totalTime);\n      setTimeTaken(timeTaken);\n\n      // Draw the needle meter graph\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n\n      // Set the size of the canvas and center point\n      canvas.width = 300;\n      canvas.height = 300;\n      const centerX = canvas.width / 2;\n      const centerY = canvas.height / 2;\n\n      // Set the colors\n      const bgColor = '#EEE';\n      const textColor = '#444';\n      const needleColor = '#F00';\n\n      // Draw the background circle\n      context.beginPath();\n      context.arc(centerX, centerY, 120, 0, 2 * Math.PI);\n      context.fillStyle = bgColor;\n      context.fill();\n\n      // Draw the total time text\n      context.font = '24px Arial';\n      context.fillStyle = textColor;\n      context.textAlign = 'center';\n      context.fillText('Total Time', centerX, centerY - 40);\n      context.font = '48px Arial';\n      context.fillText(`${totalTime}m`, centerX, centerY);\n\n      // Draw the needle\n      const needleLength = 100;\n      const angle = (timeTaken / totalTime * 2 - 1) * Math.PI / 2;\n      const needleX = centerX + Math.cos(angle) * needleLength;\n      const needleY = centerY - Math.sin(angle) * needleLength;\n      context.beginPath();\n      context.moveTo(centerX, centerY);\n      context.lineTo(needleX, needleY);\n      context.lineWidth = 5;\n      context.strokeStyle = needleColor;\n      context.stroke();\n\n      // Draw the time taken text\n      context.font = '24px Arial';\n      context.fillStyle = textColor;\n      context.fillText('Time Taken', centerX, centerY + 80);\n      context.font = '36px Arial';\n      context.fillText(`${timeTaken}m`, centerX, centerY + 120);\n    }).catch(err => console.error(err));\n  }, []);\n\n  // Render the component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n// Export the component\n_s(App, \"yj3sw7LvdNmw2jTZMAdGu7yCud4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","jsxDEV","_jsxDEV","App","_s","totalTime","setTotalTime","timeTaken","setTimeTaken","canvasRef","get","then","res","data","canvas","current","context","getContext","width","height","centerX","centerY","bgColor","textColor","needleColor","beginPath","arc","Math","PI","fillStyle","fill","font","textAlign","fillText","needleLength","angle","needleX","cos","needleY","sin","moveTo","lineTo","lineWidth","strokeStyle","stroke","catch","err","console","error","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sameer Shahzad/Desktop/quiz/testing/src/App.js"],"sourcesContent":["// Import dependencies\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n// Define the component\nfunction App() {\n  const [totalTime, setTotalTime] = useState(0);\n  const [timeTaken, setTimeTaken] = useState(0);\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    // Fetch data from the backend API\n    axios.get('http://localhost:5000/api/results')\n      .then(res => {\n        const { totalTime, timeTaken } = res.data;\n        setTotalTime(totalTime);\n        setTimeTaken(timeTaken);\n\n        // Draw the needle meter graph\n        const canvas = canvasRef.current;\n        const context = canvas.getContext('2d');\n\n        // Set the size of the canvas and center point\n        canvas.width = 300;\n        canvas.height = 300;\n        const centerX = canvas.width / 2;\n        const centerY = canvas.height / 2;\n\n        // Set the colors\n        const bgColor = '#EEE';\n        const textColor = '#444';\n        const needleColor = '#F00';\n\n        // Draw the background circle\n        context.beginPath();\n        context.arc(centerX, centerY, 120, 0, 2 * Math.PI);\n        context.fillStyle = bgColor;\n        context.fill();\n\n        // Draw the total time text\n        context.font = '24px Arial';\n        context.fillStyle = textColor;\n        context.textAlign = 'center';\n        context.fillText('Total Time', centerX, centerY - 40);\n        context.font = '48px Arial';\n        context.fillText(`${totalTime}m`, centerX, centerY);\n\n        // Draw the needle\n        const needleLength = 100;\n        const angle = ((timeTaken / totalTime) * 2 - 1) * Math.PI / 2;\n        const needleX = centerX + Math.cos(angle) * needleLength;\n        const needleY = centerY - Math.sin(angle) * needleLength;\n        context.beginPath();\n        context.moveTo(centerX, centerY);\n        context.lineTo(needleX, needleY);\n        context.lineWidth = 5;\n        context.strokeStyle = needleColor;\n        context.stroke();\n\n        // Draw the time taken text\n        context.font = '24px Arial';\n        context.fillStyle = textColor;\n        context.fillText('Time Taken', centerX, centerY + 80);\n        context.font = '36px Arial';\n        context.fillText(`${timeTaken}m`, centerX, centerY + 120);\n      })\n      .catch(err => console.error(err));\n  }, []);\n\n  // Render the component\n  return (\n    <div className=\"App\">\n      <canvas ref={canvasRef} />\n    </div>\n  );\n}\n\n// Export the component\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}