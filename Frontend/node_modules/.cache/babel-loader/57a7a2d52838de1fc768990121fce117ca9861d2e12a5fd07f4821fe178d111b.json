{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sameer Shahzad\\\\Desktop\\\\quiz\\\\testing\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [subject, setSubject] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [score, setScore] = useState(null);\n  useEffect(() => {\n    // Load questions from the server when the subject changes\n    if (subject) {\n      axios.get(`http://localhost:5000/api/questions/${subject}`).then(response => setQuestions(response.data)).catch(error => console.error(error));\n    }\n  }, [subject]);\n  const handleSubjectSelect = event => {\n    setSubject(event.target.value);\n    setQuestions([]);\n    setAnswers([]);\n    setScore(null);\n  };\n  const handleAnswerSelect = (questionId, selectedOption) => {\n    // Update the answers array with the user's selected option\n    const newAnswers = answers.filter(answer => answer.questionId !== questionId);\n    newAnswers.push({\n      questionId,\n      selectedOption\n    });\n    setAnswers(newAnswers);\n  };\n  const handleSubmitAnswers = event => {\n    event.preventDefault();\n\n    // Extract the correct options from the questions array\n    const correctOptions = questions.map(question => question.correctOption);\n\n    // Calculate the user's score by comparing their selected options to the correct options\n    let score = 0;\n    for (let i = 0; i < answers.length; i++) {\n      if (answers[i].selectedOption === correctOptions[i]) {\n        score++;\n      }\n    }\n\n    // Send the score to the server to save to the database\n    axios.post(`/api/submit-answers/${subject}`, {\n      answers\n    }).then(response => setScore(response.data.score)).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MCQ Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"subject-select\",\n      children: \"Choose a subject:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"subject-select\",\n      value: subject,\n      onChange: handleSubjectSelect,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"--Select--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"maths\",\n        children: \"Maths\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"physics\",\n        children: \"Physics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"chemistry\",\n        children: \"Chemistry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitAnswers,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [subject, \" questions\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), question.options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: option,\n            name: `question-${question._id}`,\n            value: option,\n            onChange: () => handleAnswerSelect(question._id, option),\n            checked: answers.some(answer => answer.questionId === question._id && answer.selectedOption === option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: option,\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }, this)]\n        }, option, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this))]\n      }, question._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), score !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Your score: \", score, \"/\", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5GijwPZoByiO3iucpfkAP4cxllY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","subject","setSubject","questions","setQuestions","answers","setAnswers","score","setScore","get","then","response","data","catch","error","console","handleSubjectSelect","event","target","value","handleAnswerSelect","questionId","selectedOption","newAnswers","filter","answer","push","handleSubmitAnswers","preventDefault","correctOptions","map","question","correctOption","i","length","post","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","onSubmit","options","option","type","name","_id","checked","some","_c","$RefreshReg$"],"sources":["C:/Users/Sameer Shahzad/Desktop/quiz/testing/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [subject, setSubject] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [score, setScore] = useState(null);\n\n  useEffect(() => {\n    // Load questions from the server when the subject changes\n    if (subject) {\n      axios.get(`http://localhost:5000/api/questions/${subject}`)\n        .then(response => setQuestions(response.data))\n        .catch(error => console.error(error));\n    }\n  }, [subject]);\n\n  const handleSubjectSelect = event => {\n    setSubject(event.target.value);\n    setQuestions([]);\n    setAnswers([]);\n    setScore(null);\n  };\n\n  const handleAnswerSelect = (questionId, selectedOption) => {\n    // Update the answers array with the user's selected option\n    const newAnswers = answers.filter(answer => answer.questionId !== questionId);\n    newAnswers.push({ questionId, selectedOption });\n    setAnswers(newAnswers);\n  };\n\n  const handleSubmitAnswers = event => {\n    event.preventDefault();\n\n    // Extract the correct options from the questions array\n    const correctOptions = questions.map(question => question.correctOption);\n\n    // Calculate the user's score by comparing their selected options to the correct options\n    let score = 0;\n    for (let i = 0; i < answers.length; i++) {\n      if (answers[i].selectedOption === correctOptions[i]) {\n        score++;\n      }\n    }\n\n    // Send the score to the server to save to the database\n    axios.post(`/api/submit-answers/${subject}`, { answers })\n      .then(response => setScore(response.data.score))\n      .catch(error => console.error(error));\n  };\n\n  return (\n    <div>\n      <h1>MCQ Quiz</h1>\n      <label htmlFor=\"subject-select\">Choose a subject:</label>\n      <select id=\"subject-select\" value={subject} onChange={handleSubjectSelect}>\n        <option value=\"\">--Select--</option>\n        <option value=\"maths\">Maths</option>\n        <option value=\"physics\">Physics</option>\n        <option value=\"chemistry\">Chemistry</option>\n      </select>\n\n      {questions.length > 0 && (\n        <form onSubmit={handleSubmitAnswers}>\n          <h2>{subject} questions</h2>\n          {questions.map(question => (\n            <div key={question._id}>\n              <p>{question.question}</p>\n              {question.options.map(option => (\n                <div key={option}>\n                  <input\n                    type=\"radio\"\n                    id={option}\n                    name={`question-${question._id}`}\n                    value={option}\n                    onChange={() => handleAnswerSelect(question._id, option)}\n                    checked={answers.some(answer => answer.questionId === question._id && answer.selectedOption === option)}\n                  />\n                  <label htmlFor={option}>{option}</label>\n                </div>\n              ))}\n            </div>\n          ))}\n          <button type=\"submit\">Submit answers</button>\n        </form>\n      )}\n\n      {score !== null && (\n        <div>\n          <h2>Your score: {score}/{questions.length}</h2>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}