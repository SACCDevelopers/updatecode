{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sameer Shahzad\\\\Desktop\\\\quiz\\\\testing\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState('');\n  const [score, setScore] = useState(0);\n  const [time, setTime] = useState(0);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/questions').then(response => {\n      setQuestions(response.data);\n      setTime(response.data.length * 60); // set time based on number of questions\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setTime(prevTime => prevTime - 1);\n    }, 1000);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  const handleOptionSelect = option => {\n    setSelectedOption(option);\n  };\n  const handleNextQuestion = () => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (currentQuestion.correctOption === selectedOption) {\n      setScore(score + 1);\n    }\n    setSelectedOption('');\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n  };\n  const handleFinishQuiz = () => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (currentQuestion.correctOption === selectedOption) {\n      setScore(score + 1);\n    }\n    alert(`Your score is ${score}/${questions.length}`);\n    setSelectedOption('');\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setTime(questions.length * 60); // reset time\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Time remaining: \", Math.max(0, time), \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), currentQuestionIndex < questions.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: questions[currentQuestionIndex].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"option\",\n            id: `option${index}`,\n            value: option,\n            checked: selectedOption === option,\n            onChange: () => handleOptionSelect(option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `option${index}`,\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextQuestion,\n        disabled: !selectedOption,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Quiz Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your score is \", score, \"/\", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFinishQuiz,\n        children: \"Finish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WY/GLSfWgu8PVpUpggsOJ6z390w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedOption","setSelectedOption","score","setScore","time","setTime","get","then","response","data","length","catch","error","console","intervalId","setInterval","prevTime","clearInterval","handleOptionSelect","option","handleNextQuestion","currentQuestion","correctOption","handleFinishQuiz","alert","children","Math","max","fileName","_jsxFileName","lineNumber","columnNumber","question","options","map","index","type","name","id","value","checked","onChange","htmlFor","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Sameer Shahzad/Desktop/quiz/testing/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState('');\n  const [score, setScore] = useState(0);\n  const [time, setTime] = useState(0);\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/questions')\n      .then(response => {\n        setQuestions(response.data);\n        setTime(response.data.length * 60); // set time based on number of questions\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setTime(prevTime => prevTime - 1);\n    }, 1000);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  const handleOptionSelect = (option) => {\n    setSelectedOption(option);\n  };\n\n  const handleNextQuestion = () => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (currentQuestion.correctOption === selectedOption) {\n      setScore(score + 1);\n    }\n    setSelectedOption('');\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n  };\n\n  const handleFinishQuiz = () => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (currentQuestion.correctOption === selectedOption) {\n      setScore(score + 1);\n    }\n    alert(`Your score is ${score}/${questions.length}`);\n    setSelectedOption('');\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setTime(questions.length * 60); // reset time\n  };\n\n  return (\n    <div>\n      <div>Time remaining: {Math.max(0, time)} seconds</div>\n      {currentQuestionIndex < questions.length ? (\n        <div>\n          <h1>{questions[currentQuestionIndex].question}</h1>\n          <ul>\n            {questions[currentQuestionIndex].options.map((option, index) => (\n              <li key={index}>\n                <input\n                  type=\"radio\"\n                  name=\"option\"\n                  id={`option${index}`}\n                  value={option}\n                  checked={selectedOption === option}\n                  onChange={() => handleOptionSelect(option)}\n                />\n                <label htmlFor={`option${index}`}>{option}</label>\n              </li>\n            ))}\n          </ul>\n          <button onClick={handleNextQuestion} disabled={!selectedOption}>Next</button>\n        </div>\n      ) : (\n        <div>\n          <h1>Quiz Complete</h1>\n          <p>Your score is {score}/{questions.length}</p>\n          <button onClick={handleFinishQuiz}>Finish</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}