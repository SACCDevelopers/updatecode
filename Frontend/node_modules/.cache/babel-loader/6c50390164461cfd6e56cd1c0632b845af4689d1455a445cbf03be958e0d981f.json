{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sameer Shahzad\\\\Desktop\\\\sa\\\\testing\\\\src\\\\component\\\\Quiz\\\\AvailableCounsellorProfileCard.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CounsellorProfileCard = () => {\n  _s();\n  const [counselors, setCounselors] = useState([]);\n  const [requestedId, setRequestedId] = useState(null);\n  const [studentName, setStudentName] = useState('');\n  useEffect(() => {\n    // const studentName = GetCookies(); // Assuming GetCookies returns the student's name\n    const studentName = \"Sameer\";\n    setStudentName(studentName);\n    fetchCounselors();\n    checkExistingRequest(studentName);\n  }, []);\n  const fetchCounselors = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/counselors');\n      const sortedCounselors = response.data.sort((a, b) => b.Rate - a.Rate);\n      setCounselors(sortedCounselors);\n    } catch (error) {\n      console.error('Error fetching counselors:', error);\n    }\n  };\n  const checkExistingRequest = async studentName => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/requests?studentName=${studentName}`);\n      if (response.data) {\n        console.log('Student has already made a request to a counselor.');\n        // Perform any necessary actions when the student has already made a request\n        setRequestedId(response.data.counselorId);\n      }\n    } catch (error) {\n      console.error('Error checking existing request:', error);\n    }\n  };\n  const handleRequest = async (id, counselorName) => {\n    if (requestedId === null) {\n      setRequestedId(id);\n      const requestData = {\n        studentName,\n        counselorName,\n        requestDate: new Date(),\n        status: 'pending'\n      };\n      try {\n        const response = await axios.post('http://localhost:5000/api/requests', requestData);\n        console.log('Request submitted:', response.data);\n        // Perform any necessary actions after successful request submission\n      } catch (error) {\n        console.error('Error submitting request:', error);\n        // Handle error case\n      }\n    }\n  };\n\n  const renderProfileCards = () => {\n    return counselors.map((counselor, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `profile-card animated-card-${index}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"request-row\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: `request-link${requestedId === counselor._id ? ' requested' : ''}`,\n          onClick: () => handleRequest(counselor._id, `${counselor.FirstName} ${counselor.LastName}`),\n          disabled: requestedId !== null && requestedId !== counselor._id,\n          children: requestedId === counselor._id ? 'Requested' : 'Request for Tie Up'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, counselor._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-cards-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"page-title\",\n      children: \"Available Counselors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-cards-grid\",\n      children: renderProfileCards()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(CounsellorProfileCard, \"o5xjr/B5DeqWEqfJTDByPlDz/zA=\");\n_c = CounsellorProfileCard;\nexport default CounsellorProfileCard;\nvar _c;\n$RefreshReg$(_c, \"CounsellorProfileCard\");","map":{"version":3,"names":["CounsellorProfileCard","_s","counselors","setCounselors","useState","requestedId","setRequestedId","studentName","setStudentName","useEffect","fetchCounselors","checkExistingRequest","response","axios","get","sortedCounselors","data","sort","a","b","Rate","error","console","log","counselorId","handleRequest","id","counselorName","requestData","requestDate","Date","status","post","renderProfileCards","map","counselor","index","_jsxDEV","className","children","type","_id","onClick","FirstName","LastName","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sameer Shahzad/Desktop/sa/testing/src/component/Quiz/AvailableCounsellorProfileCard.js"],"sourcesContent":["const CounsellorProfileCard = () => {\r\n  const [counselors, setCounselors] = useState([]);\r\n  const [requestedId, setRequestedId] = useState(null);\r\n  const [studentName, setStudentName] = useState('');\r\n\r\n  useEffect(() => {\r\n    // const studentName = GetCookies(); // Assuming GetCookies returns the student's name\r\n    const studentName = \"Sameer\";\r\n    setStudentName(studentName);\r\n\r\n    fetchCounselors();\r\n    checkExistingRequest(studentName);\r\n  }, []);\r\n\r\n  const fetchCounselors = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/counselors');\r\n      const sortedCounselors = response.data.sort((a, b) => b.Rate - a.Rate);\r\n      setCounselors(sortedCounselors);\r\n    } catch (error) {\r\n      console.error('Error fetching counselors:', error);\r\n    }\r\n  };\r\n\r\n  const checkExistingRequest = async (studentName) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/requests?studentName=${studentName}`);\r\n      if (response.data) {\r\n        console.log('Student has already made a request to a counselor.');\r\n        // Perform any necessary actions when the student has already made a request\r\n        setRequestedId(response.data.counselorId);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error checking existing request:', error);\r\n    }\r\n  };\r\n\r\n  const handleRequest = async (id, counselorName) => {\r\n    if (requestedId === null) {\r\n      setRequestedId(id);\r\n\r\n      const requestData = {\r\n        studentName,\r\n        counselorName,\r\n        requestDate: new Date(),\r\n        status: 'pending',\r\n      };\r\n\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/api/requests', requestData);\r\n        console.log('Request submitted:', response.data);\r\n        // Perform any necessary actions after successful request submission\r\n      } catch (error) {\r\n        console.error('Error submitting request:', error);\r\n        // Handle error case\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderProfileCards = () => {\r\n    return counselors.map((counselor, index) => (\r\n      <div key={counselor._id} className={`profile-card animated-card-${index}`}>\r\n        {/* ... */}\r\n        <div className=\"request-row\">\r\n          <button\r\n            type=\"button\"\r\n            className={`request-link${requestedId === counselor._id ? ' requested' : ''}`}\r\n            onClick={() => handleRequest(counselor._id, `${counselor.FirstName} ${counselor.LastName}`)}\r\n            disabled={requestedId !== null && requestedId !== counselor._id}\r\n          >\r\n            {requestedId === counselor._id ? 'Requested' : 'Request for Tie Up'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-cards-container\">\r\n      <h2 className=\"page-title\">Available Counselors</h2>\r\n      <div className=\"profile-cards-grid\">{renderProfileCards()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CounsellorProfileCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}