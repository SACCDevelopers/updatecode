{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sameer Shahzad\\\\Desktop\\\\quiz\\\\testing\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChemistryResults = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [{\n      data: [],\n      backgroundColor: []\n    }]\n  });\n  const [chartOptions, setChartOptions] = useState({\n    plugins: {\n      legend: {\n        position: 'bottom'\n      }\n    }\n  });\n  const [chartInstance, setChartInstance] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/results/chemistry');\n        const data = await res.json();\n        setChartData({\n          labels: ['Obtained Marks', 'Total Marks'],\n          datasets: [{\n            data: [data.obtainedMarks, data.totalMarks - data.obtainedMarks],\n            backgroundColor: ['#36a2eb', '#ebed36']\n          }]\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (!chartData.datasets[0].data.length) return;\n    if (chartInstance) {\n      chartInstance.destroy();\n    }\n    const newChartInstance = new Chart(canvasRef.current, {\n      type: 'doughnut',\n      data: chartData,\n      options: chartOptions\n    });\n    setChartInstance(newChartInstance);\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n    };\n  }, [chartData, chartOptions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chemistry Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: \"100\",\n        height: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(ChemistryResults, \"uLhhwTZN7pOZe9HqDyxxuniG7mU=\");\n_c = ChemistryResults;\nexport default ChemistryResults;\nvar _c;\n$RefreshReg$(_c, \"ChemistryResults\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chart","jsxDEV","_jsxDEV","ChemistryResults","_s","canvasRef","chartData","setChartData","labels","datasets","data","backgroundColor","chartOptions","setChartOptions","plugins","legend","position","chartInstance","setChartInstance","fetchData","res","fetch","json","obtainedMarks","totalMarks","err","console","error","length","destroy","newChartInstance","current","type","options","children","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","width","height","_c","$RefreshReg$"],"sources":["C:/Users/Sameer Shahzad/Desktop/quiz/testing/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js/auto';\n\nconst ChemistryResults = () => {\n  const canvasRef = useRef(null);\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [\n      {\n        data: [],\n        backgroundColor: [],\n      },\n    ],\n  });\n  const [chartOptions, setChartOptions] = useState({\n    plugins: {\n      legend: {\n        position: 'bottom',\n      },\n    },\n  });\n  const [chartInstance, setChartInstance] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/results/chemistry');\n        const data = await res.json();\n        setChartData({\n          labels: ['Obtained Marks', 'Total Marks'],\n          datasets: [\n            {\n              data: [data.obtainedMarks, data.totalMarks - data.obtainedMarks],\n              backgroundColor: ['#36a2eb', '#ebed36'],\n            },\n          ],\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (!chartData.datasets[0].data.length) return;\n\n    if (chartInstance) {\n      chartInstance.destroy();\n    }\n\n    const newChartInstance = new Chart(canvasRef.current, {\n      type: 'doughnut',\n      data: chartData,\n      options: chartOptions,\n    });\n\n    setChartInstance(newChartInstance);\n\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n    };\n  }, [chartData, chartOptions]);\n\n  return (\n    <div>\n      <h2>Chemistry Results</h2>\n      <div className=\"chart-container\">\n        <canvas ref={canvasRef} width=\"100\" height=\"100\" />\n      </div>\n    </div>\n  );\n};\n\nexport default ChemistryResults;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}