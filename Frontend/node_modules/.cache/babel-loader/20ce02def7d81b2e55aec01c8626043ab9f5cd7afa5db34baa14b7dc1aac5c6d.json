{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sameer Shahzad\\\\Desktop\\\\quiz\\\\testing\\\\src\\\\Quiz\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState('');\n  const [score, setScore] = useState(0);\n  const [time, setTime] = useState(0);\n  const [intervalId, setIntervalId] = useState(null);\n  const [wrongAttempts, setWrongAttempts] = useState([]);\n  const chartRef = useRef(null); // Reference to the chart canvas\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/PhysicsQuiz/Questions').then(response => {\n      setQuestions(response.data);\n      setTime(response.data.length * 60); // set time based on number of questions\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  useEffect(() => {\n    // Only set the interval if there are questions to display\n    if (questions.length > 0) {\n      const intervalId = setInterval(() => {\n        setTime(prevTime => prevTime - 1);\n      }, 1000);\n      setIntervalId(intervalId);\n    }\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [questions]);\n  useEffect(() => {\n    if (currentQuestionIndex >= questions.length || time <= 0) {\n      clearInterval(intervalId); // stop the timer\n      const totalTime = questions.length * 60 - time; // calculate total time taken\n      const scorePercentage = score / questions.length * 100; // calculate score percentage\n\n      // Create an array of obtained scores\n      const obtainedScores = questions.map((question, index) => {\n        if (index < currentQuestionIndex) {\n          return 1; // Correct answer\n        } else if (wrongAttempts.some(attempt => attempt.questionNo === question.questionNo)) {\n          return 0; // Wrong answer\n        } else {\n          return 0.5; // Skipped question\n        }\n      });\n\n      // Create the chart\n      const ctx = chartRef.current.getContext('2d');\n      new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: obtainedScores.map((_, index) => `Question ${index + 1}`),\n          datasets: [{\n            label: 'Obtained Score',\n            data: obtainedScores,\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true,\n              max: 1,\n              ticks: {\n                stepSize: 0.1\n              }\n            }\n          }\n        }\n      });\n      return;\n    }\n  }, [currentQuestionIndex, questions, score, time, wrongAttempts]);\n  const secondsToHMS = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = seconds % 60;\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  const handleOptionSelect = option => {\n    setSelectedOption(option);\n  };\n  const handleNextQuestion = () => {\n    const currentQuestion = questions[currentQuestionIndex];\n    const trimmedCorrectOption = currentQuestion.correctOption.trim(); // Trim whitespace from correctOption\n    const totalTime = questions.length * 60 - time; // calculate total time taken\n\n    if (trimmedCorrectOption === selectedOption) {\n      setScore(score + 1);\n    } else {\n      setWrongAttempts(prevAttempts => [...prevAttempts, currentQuestion]);\n    }\n    if (currentQuestionIndex === questions.length - 1) {\n      const result = {\n        chapter: 'bbbb',\n        totalMarks: questions.length,\n        obtainedMarks: score,\n        timeTaken: totalTime,\n        dateTime: new Date().toISOString() // Adds the current date and time in ISO format\n      };\n\n      axios.post('http://localhost:5000/api/PhysicsQuiz/Results', result).then(response => {\n        console.log(response.data.message);\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n    setSelectedOption('');\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n  };\n  if (currentQuestionIndex >= questions.length || time <= 0) {\n    clearInterval(intervalId); // stop the timer\n    const totalTime = questions.length * 60 - time; // calculate total time taken\n    const scorePercentage = score / questions.length * 100; // calculate score percentage\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Quiz Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), scorePercentage >= 50 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your score is \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"green-score-circle\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"score\",\n            children: [score, \"/\", questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 65\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 28\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"green-message\",\n          children: \"Keep it up!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 130\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your score is \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"red-score-circle\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"score\",\n            children: [score, \"/\", questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 28\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"red-message\",\n          children: \"Work Hard to get good scores!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 128\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), wrongAttempts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrong-attempts\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Wrong Attempts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), wrongAttempts.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Question \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: question.questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"correctAnswers\",\n            children: [\"Correct Answer: \", question[`option${question.correctOption.trim()}`]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: questions[currentQuestionIndex].subject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-count\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Question \", currentQuestionIndex + 1, \" of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [questions.length - currentQuestionIndex - 1, \" questions remaining\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: secondsToHMS(Math.max(0, time))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"question\",\n        children: questions[currentQuestionIndex].questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"options\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"option\",\n            id: \"optionA\",\n            value: \"A\",\n            checked: selectedOption === 'A',\n            onChange: () => handleOptionSelect('A')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"optionA\",\n            children: questions[currentQuestionIndex].optionA\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"option\",\n            id: \"optionB\",\n            value: \"B\",\n            checked: selectedOption === 'B',\n            onChange: () => handleOptionSelect('B')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"optionB\",\n            children: questions[currentQuestionIndex].optionB\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"option\",\n            id: \"optionC\",\n            value: \"C\",\n            checked: selectedOption === 'C',\n            onChange: () => handleOptionSelect('C')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"optionC\",\n            children: questions[currentQuestionIndex].optionC\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"option\",\n            id: \"optionD\",\n            value: \"D\",\n            checked: selectedOption === 'D',\n            onChange: () => handleOptionSelect('D')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"optionD\",\n            children: questions[currentQuestionIndex].optionD\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-button\",\n        onClick: handleNextQuestion,\n        disabled: !selectedOption,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4Ilbn1E0ECfG/d+DrnOu401MqR4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Chart","jsxDEV","_jsxDEV","App","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedOption","setSelectedOption","score","setScore","time","setTime","intervalId","setIntervalId","wrongAttempts","setWrongAttempts","chartRef","get","then","response","data","length","catch","error","console","setInterval","prevTime","clearInterval","totalTime","scorePercentage","obtainedScores","map","question","index","some","attempt","questionNo","ctx","current","getContext","type","labels","_","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","max","ticks","stepSize","secondsToHMS","seconds","hours","Math","floor","minutes","secs","toString","padStart","handleOptionSelect","option","handleNextQuestion","currentQuestion","trimmedCorrectOption","correctOption","trim","prevAttempts","result","chapter","totalMarks","obtainedMarks","timeTaken","dateTime","Date","toISOString","post","log","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","questionText","ref","subject","name","id","value","checked","onChange","htmlFor","optionA","optionB","optionC","optionD","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Sameer Shahzad/Desktop/quiz/testing/src/Quiz/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\nimport '../App.css';\n\nfunction App() {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState('');\n  const [score, setScore] = useState(0);\n  const [time, setTime] = useState(0);\n  const [intervalId, setIntervalId] = useState(null);\n  const [wrongAttempts, setWrongAttempts] = useState([]);\n  const chartRef = useRef(null); // Reference to the chart canvas\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/PhysicsQuiz/Questions')\n      .then(response => {\n        setQuestions(response.data);\n        setTime(response.data.length * 60); // set time based on number of questions\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    // Only set the interval if there are questions to display\n    if (questions.length > 0) {\n      const intervalId = setInterval(() => {\n        setTime(prevTime => prevTime - 1);\n      }, 1000);\n      setIntervalId(intervalId);\n    }\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [questions]);\n\n  useEffect(() => {\n    if (currentQuestionIndex >= questions.length || time <= 0) {\n      clearInterval(intervalId); // stop the timer\n      const totalTime = questions.length * 60 - time; // calculate total time taken\n      const scorePercentage = (score / questions.length) * 100; // calculate score percentage\n\n      // Create an array of obtained scores\n      const obtainedScores = questions.map((question, index) => {\n        if (index < currentQuestionIndex) {\n          return 1; // Correct answer\n        } else if (wrongAttempts.some(attempt => attempt.questionNo === question.questionNo)) {\n          return 0; // Wrong answer\n        } else {\n          return 0.5; // Skipped question\n        }\n      });\n\n      // Create the chart\n      const ctx = chartRef.current.getContext('2d');\n      new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: obtainedScores.map((_, index) => `Question ${index + 1}`),\n          datasets: [\n            {\n              label: 'Obtained Score',\n              data: obtainedScores,\n              backgroundColor: 'rgba(75, 192, 192, 0.2)',\n              borderColor: 'rgba(75, 192, 192, 1)',\n              borderWidth: 1\n            }\n          ]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true,\n              max: 1,\n              ticks: {\n                stepSize: 0.1\n              }\n            }\n          }\n        }\n      });\n\n      return;\n    }\n  }, [currentQuestionIndex, questions, score, time, wrongAttempts]);\n\n  const secondsToHMS = (seconds) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = seconds % 60;\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  const handleOptionSelect = (option) => {\n    setSelectedOption(option);\n  };\n\n  const handleNextQuestion = () => {\n    const currentQuestion = questions[currentQuestionIndex];\n    const trimmedCorrectOption = currentQuestion.correctOption.trim(); // Trim whitespace from correctOption\n    const totalTime = questions.length * 60 - time; // calculate total time taken\n\n    if (trimmedCorrectOption === selectedOption) {\n      setScore(score + 1);\n    } else {\n      setWrongAttempts(prevAttempts => [...prevAttempts, currentQuestion]);\n    }\n    if (currentQuestionIndex === questions.length - 1) {\n      const result = {\n        chapter: 'bbbb',\n        totalMarks: questions.length,\n        obtainedMarks: score,\n        timeTaken: totalTime,\n        dateTime: new Date().toISOString() // Adds the current date and time in ISO format\n      };\n      axios.post('http://localhost:5000/api/PhysicsQuiz/Results', result)\n        .then(response => {\n          console.log(response.data.message);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n\n    setSelectedOption('');\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n  };\n\n  if (currentQuestionIndex >= questions.length || time <= 0) {\n    clearInterval(intervalId); // stop the timer\n    const totalTime = questions.length * 60 - time; // calculate total time taken\n    const scorePercentage = (score / questions.length) * 100; // calculate score percentage\n\n    return (\n      <div className=\"quiz-container\">\n        <h1>Quiz Complete</h1>\n        {scorePercentage >= 50 ? (\n          <p>Your score is <span className=\"green-score-circle\"><span className=\"score\">{score}/{questions.length}</span></span> <span className=\"green-message\">Keep it up!</span></p>\n        ) : (\n          <p>Your score is <span className=\"red-score-circle\"><span className=\"score\">{score}/{questions.length}</span></span> <span className=\"red-message\">Work Hard to get good scores!</span></p>\n        )}\n\n        {wrongAttempts.length > 0 && (\n          <div className=\"wrong-attempts\">\n            <h2>Wrong Attempts</h2>\n            {wrongAttempts.map((question, index) => (\n              <div key={index}>\n                <h3>Question {index + 1}</h3>\n                <p>{question.questionText}</p>\n                <p className='correctAnswers'>Correct Answer: {question[`option${question.correctOption.trim()}`]}</p>\n              </div>\n            ))}\n          </div>\n        )}\n\n        <canvas ref={chartRef}></canvas> {/* Chart canvas */}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"quiz-container\">\n      <h1>{questions[currentQuestionIndex].subject}</h1>\n      <div className=\"question-count\">\n        <p>Question {currentQuestionIndex + 1} of {questions.length}</p>\n        <p>{questions.length - currentQuestionIndex - 1} questions remaining</p>\n      </div>\n      <div className=\"timer\">{secondsToHMS(Math.max(0, time))}</div>\n      <div className=\"question-container\">\n        <h1 className=\"question\">{questions[currentQuestionIndex].questionText}</h1>\n        <ul className=\"options\">\n          <li>\n            <input\n              type=\"radio\"\n              name=\"option\"\n              id=\"optionA\"\n              value=\"A\"\n              checked={selectedOption === 'A'}\n              onChange={() => handleOptionSelect('A')}\n            />\n            <label htmlFor=\"optionA\">{questions[currentQuestionIndex].optionA}</label>\n          </li>\n          <li>\n            <input\n              type=\"radio\"\n              name=\"option\"\n              id=\"optionB\"\n              value=\"B\"\n              checked={selectedOption === 'B'}\n              onChange={() => handleOptionSelect('B')}\n            />\n            <label htmlFor=\"optionB\">{questions[currentQuestionIndex].optionB}</label>\n          </li>\n          <li>\n            <input\n              type=\"radio\"\n              name=\"option\"\n              id=\"optionC\"\n              value=\"C\"\n              checked={selectedOption === 'C'}\n              onChange={() => handleOptionSelect('C')}\n            />\n            <label htmlFor=\"optionC\">{questions[currentQuestionIndex].optionC}</label>\n          </li>\n          <li>\n            <input\n              type=\"radio\"\n              name=\"option\"\n              id=\"optionD\"\n              value=\"D\"\n              checked={selectedOption === 'D'}\n              onChange={() => handleOptionSelect('D')}\n            />\n            <label htmlFor=\"optionD\">{questions[currentQuestionIndex].optionD}</label>\n          </li>\n        </ul>\n\n        <button className=\"next-button\" onClick={handleNextQuestion} disabled={!selectedOption}>Next</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}