{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sameer Shahzad\\\\Desktop\\\\quiz\\\\testing\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Bar, Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Results = () => {\n  _s();\n  const [chemistryData, setChemistryData] = useState({});\n  const [physicsData, setPhysicsData] = useState({});\n  useEffect(() => {\n    const getChemistryResults = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/results/chemistry');\n        const {\n          totalMarks,\n          obtainedMarks,\n          percentage\n        } = res.data;\n        const data = {\n          labels: ['Total Marks', 'Obtained Marks'],\n          datasets: [{\n            label: 'Chemistry Result',\n            backgroundColor: ['rgba(75,192,192,0.4)', 'rgba(75,192,192,0.4)'],\n            borderColor: ['rgba(75,192,192,1)', 'rgba(75,192,192,1)'],\n            borderWidth: 1,\n            hoverBackgroundColor: ['rgba(75,192,192,0.6)', 'rgba(75,192,192,0.6)'],\n            hoverBorderColor: ['rgba(75,192,192,1)', 'rgba(75,192,192,1)'],\n            data: [totalMarks, obtainedMarks]\n          }]\n        };\n        setChemistryData(data);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    function setDatasets(data) {\n      const labels = data.map(d => d.chapter);\n      const obtainedMarks = data.map(d => d.obtainedMarks);\n      const totalMarks = data.map(d => d.totalMarks);\n      if (labels && obtainedMarks && totalMarks) {\n        return {\n          labels: labels,\n          datasets: [{\n            label: 'Obtained Marks',\n            data: obtainedMarks,\n            backgroundColor: 'rgba(75,192,192,0.4)',\n            borderColor: 'rgba(75,192,192,1)',\n            borderWidth: 1\n          }, {\n            label: 'Total Marks',\n            data: totalMarks,\n            backgroundColor: 'rgba(255,99,132,0.4)',\n            borderColor: 'rgba(255,99,132,1)',\n            borderWidth: 1\n          }]\n        };\n      }\n      return null;\n    }\n    const getPhysicsResults = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/results/physics');\n        const {\n          totalMarks,\n          obtainedMarks,\n          percentage\n        } = res.data;\n        const data = {\n          labels: ['Total Marks', 'Obtained Marks'],\n          datasets: [{\n            label: 'Physics Result',\n            backgroundColor: ['rgba(255,99,132,0.4)', 'rgba(255,99,132,0.4)'],\n            borderColor: ['rgba(255,99,132,1)', 'rgba(255,99,132,1)'],\n            borderWidth: 1,\n            hoverBackgroundColor: ['rgba(255,99,132,0.6)', 'rgba(255,99,132,0.6)'],\n            hoverBorderColor: ['rgba(255,99,132,1)', 'rgba(255,99,132,1)'],\n            data: [totalMarks, obtainedMarks]\n          }]\n        };\n        setPhysicsData(data);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    getChemistryResults();\n    getPhysicsResults();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chemistry Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: chemistryData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chemistryData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Physics Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: physicsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: physicsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(Results, \"pIK9X/L2qmLsvepVxX9k2Vbvc40=\");\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useState","useEffect","axios","Bar","Pie","jsxDEV","_jsxDEV","Results","_s","chemistryData","setChemistryData","physicsData","setPhysicsData","getChemistryResults","res","get","totalMarks","obtainedMarks","percentage","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","err","console","error","setDatasets","map","d","chapter","getPhysicsResults","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sameer Shahzad/Desktop/quiz/testing/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Bar, Pie } from 'react-chartjs-2';\n\nconst Results = () => {\n  const [chemistryData, setChemistryData] = useState({});\n  const [physicsData, setPhysicsData] = useState({});\n\n  useEffect(() => {\n    const getChemistryResults = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/results/chemistry');\n        const { totalMarks, obtainedMarks, percentage } = res.data;\n        const data = {\n          labels: ['Total Marks', 'Obtained Marks'],\n          datasets: [\n            {\n              label: 'Chemistry Result',\n              backgroundColor: ['rgba(75,192,192,0.4)', 'rgba(75,192,192,0.4)'],\n              borderColor: ['rgba(75,192,192,1)', 'rgba(75,192,192,1)'],\n              borderWidth: 1,\n              hoverBackgroundColor: ['rgba(75,192,192,0.6)', 'rgba(75,192,192,0.6)'],\n              hoverBorderColor: ['rgba(75,192,192,1)', 'rgba(75,192,192,1)'],\n              data: [totalMarks, obtainedMarks]\n            }\n          ]\n        };\n        setChemistryData(data);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n\n\n\n\n    function setDatasets(data) {\n      const labels = data.map((d) => d.chapter);\n      const obtainedMarks = data.map((d) => d.obtainedMarks);\n      const totalMarks = data.map((d) => d.totalMarks);\n    \n      if (labels && obtainedMarks && totalMarks) {\n        return {\n          labels: labels,\n          datasets: [\n            {\n              label: 'Obtained Marks',\n              data: obtainedMarks,\n              backgroundColor: 'rgba(75,192,192,0.4)',\n              borderColor: 'rgba(75,192,192,1)',\n              borderWidth: 1\n            },\n            {\n              label: 'Total Marks',\n              data: totalMarks,\n              backgroundColor: 'rgba(255,99,132,0.4)',\n              borderColor: 'rgba(255,99,132,1)',\n              borderWidth: 1\n            }\n          ]\n        };\n      }\n    \n      return null;\n    }\n    \n\n\n\n\n\n    const getPhysicsResults = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/results/physics');\n        const { totalMarks, obtainedMarks, percentage } = res.data;\n        const data = {\n          labels: ['Total Marks', 'Obtained Marks'],\n          datasets: [\n            {\n              label: 'Physics Result',\n              backgroundColor: ['rgba(255,99,132,0.4)', 'rgba(255,99,132,0.4)'],\n              borderColor: ['rgba(255,99,132,1)', 'rgba(255,99,132,1)'],\n              borderWidth: 1,\n              hoverBackgroundColor: ['rgba(255,99,132,0.6)', 'rgba(255,99,132,0.6)'],\n              hoverBorderColor: ['rgba(255,99,132,1)', 'rgba(255,99,132,1)'],\n              data: [totalMarks, obtainedMarks]\n            }\n          ]\n        };\n        setPhysicsData(data);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    getChemistryResults();\n    getPhysicsResults();\n  }, []);\n\n  return (\n    <div>\n      <h2>Chemistry Results</h2>\n      <Pie data={chemistryData} />\n      <Bar data={chemistryData} />\n      <h2>Physics Results</h2>\n      <Pie data={physicsData} />\n      <Bar data={physicsData} />\n    </div>\n  );\n};\n\nexport default Results;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}