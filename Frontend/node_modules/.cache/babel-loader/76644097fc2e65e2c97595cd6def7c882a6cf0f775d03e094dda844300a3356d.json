{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sameer Shahzad\\\\Desktop\\\\quiz\\\\testing\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChemistryPieChart = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await fetch('/results/chemistry');\n        const data = await res.json();\n        setChartData({\n          labels: ['Obtained Marks', 'Total Marks'],\n          datasets: [{\n            data: [data.obtainedMarks, data.totalMarks - data.obtainedMarks],\n            backgroundColor: ['#36a2eb', '#ebed36']\n          }]\n        });\n\n        // Check if there's an existing Chart instance and destroy it\n        if (chartInstance) {\n          chartInstance.destroy();\n        }\n\n        // Create a new Chart instance\n        chartInstance = new Chart(chartRef.current, {\n          type: 'doughnut',\n          data: chartData,\n          options: {\n            plugins: {\n              legend: {\n                position: 'bottom'\n              }\n            }\n          }\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchData();\n  }, [chartInstance]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chemistry All Quizzes Average\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: \"100\",\n      height: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ChemistryPieChart, \"wCj6lF8trOnbPZUqptXpX/jyYQA=\");\n_c = ChemistryPieChart;\nexport default ChemistryPieChart;\nvar _c;\n$RefreshReg$(_c, \"ChemistryPieChart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chart","jsxDEV","_jsxDEV","ChemistryPieChart","_s","canvasRef","chartInstance","setChartInstance","fetchData","res","fetch","data","json","setChartData","labels","datasets","obtainedMarks","totalMarks","backgroundColor","destroy","chartRef","current","type","chartData","options","plugins","legend","position","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","width","height","_c","$RefreshReg$"],"sources":["C:/Users/Sameer Shahzad/Desktop/quiz/testing/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js/auto';\n\nconst ChemistryPieChart = () => {\n  const canvasRef = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await fetch('/results/chemistry');\n        const data = await res.json();\n        setChartData({\n          labels: ['Obtained Marks', 'Total Marks'],\n          datasets: [\n            {\n              data: [data.obtainedMarks, data.totalMarks - data.obtainedMarks],\n              backgroundColor: ['#36a2eb', '#ebed36'],\n            },\n          ],\n        });\n    \n        // Check if there's an existing Chart instance and destroy it\n        if (chartInstance) {\n          chartInstance.destroy();\n        }\n    \n        // Create a new Chart instance\n        chartInstance = new Chart(chartRef.current, {\n          type: 'doughnut',\n          data: chartData,\n          options: {\n            plugins: {\n              legend: {\n                position: 'bottom',\n              },\n            },\n          },\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    \n    fetchData();\n  }, [chartInstance]);\n\n  return (\n    <div>\n      <h2>Chemistry All Quizzes Average</h2>\n      <canvas ref={canvasRef} width=\"100\" height=\"100\" />\n    </div>\n  );\n};\n\nexport default ChemistryPieChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExDF,SAAS,CAAC,MAAM;IACd,eAAeW,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,oBAAoB,CAAC;QAC7C,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;QAC7BC,YAAY,CAAC;UACXC,MAAM,EAAE,CAAC,gBAAgB,EAAE,aAAa,CAAC;UACzCC,QAAQ,EAAE,CACR;YACEJ,IAAI,EAAE,CAACA,IAAI,CAACK,aAAa,EAAEL,IAAI,CAACM,UAAU,GAAGN,IAAI,CAACK,aAAa,CAAC;YAChEE,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS;UACxC,CAAC;QAEL,CAAC,CAAC;;QAEF;QACA,IAAIZ,aAAa,EAAE;UACjBA,aAAa,CAACa,OAAO,CAAC,CAAC;QACzB;;QAEA;QACAb,aAAa,GAAG,IAAIN,KAAK,CAACoB,QAAQ,CAACC,OAAO,EAAE;UAC1CC,IAAI,EAAE,UAAU;UAChBX,IAAI,EAAEY,SAAS;UACfC,OAAO,EAAE;YACPC,OAAO,EAAE;cACPC,MAAM,EAAE;gBACNC,QAAQ,EAAE;cACZ;YACF;UACF;QACF,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACpB;IACF;IAEApB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACF,aAAa,CAAC,CAAC;EAEnB,oBACEJ,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAA6B,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCjC,OAAA;MAAQkC,GAAG,EAAE/B,SAAU;MAACgC,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAlDID,iBAAiB;AAAAoC,EAAA,GAAjBpC,iBAAiB;AAoDvB,eAAeA,iBAAiB;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}