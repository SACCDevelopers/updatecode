{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sameer Shahzad\\\\Desktop\\\\quiz\\\\testing\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Results = () => {\n  _s();\n  const canvasRef1 = useRef(null);\n  const canvasRef2 = useRef(null);\n  const [chemistryResults, setChemistryResults] = useState(null);\n  const [physicsResults, setPhysicsResults] = useState(null);\n  useEffect(() => {\n    let chemistryResultsChart, chemistryPercentageChart, physicsResultsChart, physicsPercentageChart;\n    async function fetchData() {\n      try {\n        const chemistryRes = await fetch('http://localhost:5000/results/chemistry');\n        const chemistryData = await chemistryRes.json();\n        setChemistryResults(chemistryData);\n        const physicsRes = await fetch('http://localhost:5000/results/physics');\n        const physicsData = await physicsRes.json();\n        setPhysicsResults(physicsData);\n        const chemistryChartData = {\n          labels: ['Obtained Marks'],\n          datasets: [{\n            data: [chemistryData.obtainedMarks],\n            backgroundColor: ['#36a2eb']\n          }]\n        };\n        const chemistryPercentageData = {\n          labels: ['This much you are skillful', 'This much you are lacking'],\n          datasets: [{\n            data: [chemistryData.percentage, 100 - chemistryData.percentage],\n            backgroundColor: ['#36a2eb', '#ebed36']\n          }]\n        };\n        const physicsChartData = {\n          labels: ['Obtained Marks'],\n          datasets: [{\n            data: [physicsData.obtainedMarks],\n            backgroundColor: ['#36a2eb']\n          }]\n        };\n        const physicsPercentageData = {\n          labels: ['This much you are skillful', 'This much you are lacking'],\n          datasets: [{\n            data: [physicsData.percentage, 100 - physicsData.percentage],\n            backgroundColor: ['#36a2eb', '#ebed36']\n          }]\n        };\n\n        // Create doughnut chart for percentage of chemistry\n        if (chemistryPercentageChart) {\n          chemistryPercentageChart.destroy();\n        }\n        chemistryPercentageChart = new Chart(document.getElementById('chemistryPercentageChart'), {\n          type: 'doughnut',\n          data: chemistryPercentageData,\n          options: {\n            plugins: {\n              legend: {\n                position: 'bottom'\n              }\n            }\n          }\n        });\n\n        // Create bar chart for chemistry results\n        if (chemistryResultsChart) {\n          chemistryResultsChart.destroy();\n        }\n        chemistryResultsChart = new Chart(canvasRef1.current, {\n          type: 'bar',\n          data: chemistryChartData,\n          options: {\n            scales: {\n              y: {\n                beginAtZero: true,\n                max: chemistryData.totalMarks\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          }\n        });\n\n        // Create doughnut chart for percentage of physics\n        if (physicsPercentageChart) {\n          physicsPercentageChart.destroy();\n        }\n        physicsPercentageChart = new Chart(document.getElementById('physicsPercentageChart'), {\n          type: 'doughnut',\n          data: physicsPercentageData,\n          options: {\n            plugins: {\n              legend: {\n                position: 'bottom'\n              }\n            }\n          }\n        });\n\n        // Create bar chart for physics results\n        if (physicsResultsChart) {\n          physicsResultsChart.destroy();\n        }\n        physicsResultsChart = new Chart(canvasRef2.current, {\n          type: 'bar',\n          data: physicsChartData,\n          options: {\n            scales: {\n              y: {\n                beginAtZero: true,\n                max: physicsData.totalMarks\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          }\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chemistry Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), chemistryResults ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"chemistryResultsChart\",\n          ref: canvasRef1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"chemistryPercentageChart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading chemistry results...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Physics Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), physicsResults ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"physicsResultsChart\",\n          ref: canvasRef2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"physicsPercentageChart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading physics results...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(Results, \"103eyKHJczTUpSpBlXYo29Na6L4=\");\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chart","jsxDEV","_jsxDEV","Fragment","_Fragment","Results","_s","canvasRef1","canvasRef2","chemistryResults","setChemistryResults","physicsResults","setPhysicsResults","chemistryResultsChart","chemistryPercentageChart","physicsResultsChart","physicsPercentageChart","fetchData","chemistryRes","fetch","chemistryData","json","physicsRes","physicsData","chemistryChartData","labels","datasets","data","obtainedMarks","backgroundColor","chemistryPercentageData","percentage","physicsChartData","physicsPercentageData","destroy","document","getElementById","type","options","plugins","legend","position","current","scales","y","beginAtZero","max","totalMarks","display","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","ref","_c","$RefreshReg$"],"sources":["C:/Users/Sameer Shahzad/Desktop/quiz/testing/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport './App.css';\n\nconst Results = () => {\n  const canvasRef1 = useRef(null);\n  const canvasRef2 = useRef(null);\n  const [chemistryResults, setChemistryResults] = useState(null);\n  const [physicsResults, setPhysicsResults] = useState(null);\n\n  useEffect(() => {\n    let chemistryResultsChart, chemistryPercentageChart, physicsResultsChart, physicsPercentageChart;\n    async function fetchData() {\n      try {\n        const chemistryRes = await fetch('http://localhost:5000/results/chemistry');\n        const chemistryData = await chemistryRes.json();\n        setChemistryResults(chemistryData);\n\n        const physicsRes = await fetch('http://localhost:5000/results/physics');\n        const physicsData = await physicsRes.json();\n        setPhysicsResults(physicsData);\n\n        const chemistryChartData = {\n          labels: ['Obtained Marks'],\n          datasets: [\n            {\n              data: [chemistryData.obtainedMarks],\n              backgroundColor: ['#36a2eb'],\n            },\n          ],\n        };\n\n        const chemistryPercentageData = {\n          labels: ['This much you are skillful', 'This much you are lacking'],\n          datasets: [\n            {\n              data: [chemistryData.percentage, 100 - chemistryData.percentage],\n              backgroundColor: ['#36a2eb', '#ebed36'],\n            },\n          ],\n        };\n\n        const physicsChartData = {\n          labels: ['Obtained Marks'],\n          datasets: [\n            {\n              data: [physicsData.obtainedMarks],\n              backgroundColor: ['#36a2eb'],\n            },\n          ],\n        };\n\n        const physicsPercentageData = {\n          labels: ['This much you are skillful', 'This much you are lacking'],\n          datasets: [\n            {\n              data: [physicsData.percentage, 100 - physicsData.percentage],\n              backgroundColor: ['#36a2eb', '#ebed36'],\n            },\n          ],\n        };\n\n        // Create doughnut chart for percentage of chemistry\n        if (chemistryPercentageChart) {\n          chemistryPercentageChart.destroy();\n        }\n        chemistryPercentageChart = new Chart(document.getElementById('chemistryPercentageChart'), {\n          type: 'doughnut',\n          data: chemistryPercentageData,\n          options: {\n            plugins: {\n              legend: {\n                position: 'bottom',\n              },\n            },\n          },\n        });\n\n        // Create bar chart for chemistry results\n        if (chemistryResultsChart) {\n          chemistryResultsChart.destroy();\n        }\n        chemistryResultsChart = new Chart(canvasRef1.current, {\n          type: 'bar',\n          data: chemistryChartData,\n          options: {\n            scales: {\n              y: {\n                beginAtZero: true,\n                max: chemistryData.totalMarks,\n              },\n            },\n            plugins: {\n              legend: {\n                display: false,\n              },\n            },\n          },\n        });\n\n        // Create doughnut chart for percentage of physics\n        if (physicsPercentageChart) {\n          physicsPercentageChart.destroy();\n        }\n        physicsPercentageChart = new Chart(document.getElementById('physicsPercentageChart'), {\n          type: 'doughnut',\n          data: physicsPercentageData,\n          options: {\n            plugins: {\n              legend: {\n                position: 'bottom',\n              },\n            },\n          },\n        });\n\n        // Create bar chart for physics results\n        if (physicsResultsChart) {\n          physicsResultsChart.destroy();\n        }\n        physicsResultsChart = new Chart(canvasRef2.current, {\n          type: 'bar',\n          data: physicsChartData,\n          options: {\n            scales: {\n              y: {\n                beginAtZero: true,\n                max: physicsData.totalMarks,\n              },\n            },\n            plugins: {\n              legend: {\n                display: false,\n              },\n            },\n          },\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div className='container'>\n      <div className='chart-container'>\n        <h2>Chemistry Results</h2>\n        {chemistryResults ? (\n          <>\n            <canvas id='chemistryResultsChart' ref={canvasRef1}></canvas>\n            <canvas id='chemistryPercentageChart'></canvas>\n          </>\n        ) : (\n          <p>Loading chemistry results...</p>\n        )}\n      </div>\n      <div className='chart-container'>\n        <h2>Physics Results</h2>\n        {physicsResults ? (\n          <>\n            <canvas id='physicsResultsChart' ref={canvasRef2}></canvas>\n            <canvas id='physicsPercentageChart'></canvas>\n          </>\n        ) : (\n          <p>Loading physics results...</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Results;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}