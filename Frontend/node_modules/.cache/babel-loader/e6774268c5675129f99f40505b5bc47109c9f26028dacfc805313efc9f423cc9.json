{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sameer Shahzad\\\\Desktop\\\\quiz\\\\testing\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Results = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [results, setResults] = useState(null);\n  const [chart, setChart] = useState(null);\n  const [percentageChart, setPercentageChart] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await fetch('http://localhost:5000/results/chemistry');\n        const data = await res.json();\n        setResults(data);\n        if (canvasRef.current) {\n          if (chart) {\n            chart.destroy();\n          }\n          const chartData = {\n            labels: ['Obtained Marks'],\n            datasets: [{\n              data: [data.obtainedMarks],\n              backgroundColor: ['#36a2eb']\n            }]\n          };\n          setChart(new Chart(canvasRef.current, {\n            type: 'bar',\n            data: chartData,\n            options: {\n              scales: {\n                y: {\n                  beginAtZero: true,\n                  max: data.totalMarks\n                }\n              },\n              plugins: {\n                legend: {\n                  display: false\n                }\n              }\n            }\n          }));\n          if (percentageChart) {\n            percentageChart.destroy();\n          }\n          const percentageData = {\n            labels: ['This much you are skillful', 'This much you are lacking'],\n            datasets: [{\n              data: [data.percentage, 100 - data.percentage],\n              backgroundColor: ['#36a2eb', '#ebed36']\n            }]\n          };\n          setPercentageChart(new Chart(document.getElementById('percentageChart'), {\n            type: 'doughnut',\n            data: percentageData,\n            options: {\n              plugins: {\n                legend: {\n                  position: 'bottom'\n                }\n              }\n            }\n          }));\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-percentage-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"percentage-container\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"percentageChart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Obtained Marks: \", results.obtainedMarks]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Marks: \", results.totalMarks]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Percentage: \", results.percentage.toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Results, \"MgbPbu6iBkqZ9pzhPfdSGKyjCfI=\");\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chart","jsxDEV","_jsxDEV","Results","_s","canvasRef","results","setResults","chart","setChart","percentageChart","setPercentageChart","fetchData","res","fetch","data","json","current","destroy","chartData","labels","datasets","obtainedMarks","backgroundColor","type","options","scales","y","beginAtZero","max","totalMarks","plugins","legend","display","percentageData","percentage","document","getElementById","position","err","console","error","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","id","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/Sameer Shahzad/Desktop/quiz/testing/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport './App.css';\n\nconst Results = () => {\n  const canvasRef = useRef(null);\n  const [results, setResults] = useState(null);\n  const [chart, setChart] = useState(null);\n  const [percentageChart, setPercentageChart] = useState(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await fetch('http://localhost:5000/results/chemistry');\n        const data = await res.json();\n        setResults(data);\n\n        if (canvasRef.current) {\n          if (chart) {\n            chart.destroy();\n          }\n          const chartData = {\n            labels: ['Obtained Marks'],\n            datasets: [\n              {\n                data: [data.obtainedMarks],\n                backgroundColor: ['#36a2eb'],\n              },\n            ],\n          };\n          setChart(new Chart(canvasRef.current, {\n            type: 'bar',\n            data: chartData,\n            options: {\n              scales: {\n                y: {\n                  beginAtZero: true,\n                  max: data.totalMarks,\n                },\n              },\n              plugins: {\n                legend: {\n                  display: false,\n                },\n              },\n            },\n          }));\n\n          if (percentageChart) {\n            percentageChart.destroy();\n          }\n          const percentageData = {\n            labels: ['This much you are skillful', 'This much you are lacking'],\n            datasets: [\n              {\n                data: [data.percentage, 100 - data.percentage],\n                backgroundColor: ['#36a2eb', '#ebed36'],\n              },\n            ],\n          };\n          setPercentageChart(new Chart(document.getElementById('percentageChart'), {\n            type: 'doughnut',\n            data: percentageData,\n            options: {\n              plugins: {\n                legend: {\n                  position: 'bottom',\n                },\n              },\n            },\n          }));\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"results-container\">\n      <div className=\"chart-percentage-container\">\n        <div className=\"chart-container\">\n          <canvas ref={canvasRef} />\n        </div>\n        <div className=\"percentage-container\">\n          <canvas id=\"percentageChart\" />\n        </div>\n      </div>\n      {results && (\n        <div className=\"stats-container\">\n          <p>Obtained Marks: {results.obtainedMarks}</p>\n          <p>Total Marks: {results.totalMarks}</p>\n          <p>Percentage: {results.percentage.toFixed(2)}%</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Results;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}