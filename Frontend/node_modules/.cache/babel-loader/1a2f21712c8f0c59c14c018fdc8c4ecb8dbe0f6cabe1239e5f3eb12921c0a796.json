{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sameer Shahzad\\\\Desktop\\\\quiz\\\\testing\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChemistryCharts = () => {\n  _s();\n  const [chartData, setChartData] = useState({});\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await fetch('/results/chemistry');\n        const data = await res.json();\n        setChartData({\n          barData: {\n            labels: ['Obtained Marks', 'Total Marks'],\n            datasets: [{\n              label: 'Chemistry Results',\n              data: [data.obtainedMarks, data.totalMarks],\n              backgroundColor: ['#36a2eb', '#ebed36']\n            }]\n          },\n          doughnutData: {\n            labels: ['Percentage Obtained', 'Percentage Remaining'],\n            datasets: [{\n              label: 'Percentage',\n              data: [data.percentage, 100 - data.percentage],\n              backgroundColor: ['#36a2eb', '#ebed36']\n            }]\n          }\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chemistry Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData.barData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n        data: chartData.doughnutData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(ChemistryCharts, \"qLlYZUJv3crif/0xI+dehEQf0o0=\");\n_c = ChemistryCharts;\nexport default ChemistryCharts;\nvar _c;\n$RefreshReg$(_c, \"ChemistryCharts\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Doughnut","jsxDEV","_jsxDEV","ChemistryCharts","_s","chartData","setChartData","fetchData","res","fetch","data","json","barData","labels","datasets","label","obtainedMarks","totalMarks","backgroundColor","doughnutData","percentage","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","_c","$RefreshReg$"],"sources":["C:/Users/Sameer Shahzad/Desktop/quiz/testing/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Bar, Doughnut } from 'react-chartjs-2';\n\nconst ChemistryCharts = () => {\n  const [chartData, setChartData] = useState({});\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await fetch('/results/chemistry');\n        const data = await res.json();\n        setChartData({\n          barData: {\n            labels: ['Obtained Marks', 'Total Marks'],\n            datasets: [\n              {\n                label: 'Chemistry Results',\n                data: [data.obtainedMarks, data.totalMarks],\n                backgroundColor: ['#36a2eb', '#ebed36'],\n              },\n            ],\n          },\n          doughnutData: {\n            labels: ['Percentage Obtained', 'Percentage Remaining'],\n            datasets: [\n              {\n                label: 'Percentage',\n                data: [data.percentage, 100 - data.percentage],\n                backgroundColor: ['#36a2eb', '#ebed36'],\n              },\n            ],\n          },\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h2>Chemistry Results</h2>\n      <div style={{ display: 'flex' }}>\n        <Bar data={chartData.barData} />\n        <Doughnut data={chartData.doughnutData} />\n      </div>\n    </div>\n  );\n};\n\nexport default ChemistryCharts;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,eAAeU,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,oBAAoB,CAAC;QAC7C,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;QAC7BL,YAAY,CAAC;UACXM,OAAO,EAAE;YACPC,MAAM,EAAE,CAAC,gBAAgB,EAAE,aAAa,CAAC;YACzCC,QAAQ,EAAE,CACR;cACEC,KAAK,EAAE,mBAAmB;cAC1BL,IAAI,EAAE,CAACA,IAAI,CAACM,aAAa,EAAEN,IAAI,CAACO,UAAU,CAAC;cAC3CC,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS;YACxC,CAAC;UAEL,CAAC;UACDC,YAAY,EAAE;YACZN,MAAM,EAAE,CAAC,qBAAqB,EAAE,sBAAsB,CAAC;YACvDC,QAAQ,EAAE,CACR;cACEC,KAAK,EAAE,YAAY;cACnBL,IAAI,EAAE,CAACA,IAAI,CAACU,UAAU,EAAE,GAAG,GAAGV,IAAI,CAACU,UAAU,CAAC;cAC9CF,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS;YACxC,CAAC;UAEL;QACF,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOG,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACpB;IACF;IAEAd,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B1B,OAAA;MAAK2B,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAN,QAAA,gBAC9BtB,OAAA,CAACH,GAAG;QAACW,IAAI,EAAEL,SAAS,CAACO;MAAQ;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChC1B,OAAA,CAACF,QAAQ;QAACU,IAAI,EAAEL,SAAS,CAACc;MAAa;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CA/CID,eAAe;AAAA4B,EAAA,GAAf5B,eAAe;AAiDrB,eAAeA,eAAe;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}