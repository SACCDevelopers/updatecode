{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sameer Shahzad\\\\Desktop\\\\quiz\\\\testing\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChemistryPieChart = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/results/chemistry');\n        const {\n          totalMarks,\n          obtainedMarks,\n          percentage\n        } = await response.json();\n        const chartData = {\n          labels: ['Obtained Marks', 'Unobtained Marks'],\n          datasets: [{\n            label: 'Chemistry Quiz Results',\n            data: [obtainedMarks, totalMarks - obtainedMarks],\n            backgroundColor: ['#3498db', '#ecf0f1'],\n            borderColor: ['#2980b9', '#bdc3c7'],\n            borderWidth: 1\n          }]\n        };\n        const ctx = canvasRef.current.getContext('2d');\n        if (chartInstance) {\n          chartInstance.destroy();\n        }\n        setChartInstance(new Chart(ctx, {\n          type: 'pie',\n          data: chartData\n        }));\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchData();\n  }, [chartInstance]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chemistry All Quizzes Average\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: \"100\",\n      height: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ChemistryPieChart, \"wCj6lF8trOnbPZUqptXpX/jyYQA=\");\n_c = ChemistryPieChart;\nexport default ChemistryPieChart;\nvar _c;\n$RefreshReg$(_c, \"ChemistryPieChart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chart","jsxDEV","_jsxDEV","ChemistryPieChart","_s","canvasRef","chartInstance","setChartInstance","fetchData","response","fetch","totalMarks","obtainedMarks","percentage","json","chartData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","ctx","current","getContext","destroy","type","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","width","height","_c","$RefreshReg$"],"sources":["C:/Users/Sameer Shahzad/Desktop/quiz/testing/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js/auto';\n\nconst ChemistryPieChart = () => {\n  const canvasRef = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/results/chemistry');\n        const { totalMarks, obtainedMarks, percentage } = await response.json();\n        const chartData = {\n          labels: ['Obtained Marks', 'Unobtained Marks'],\n          datasets: [\n            {\n              label: 'Chemistry Quiz Results',\n              data: [obtainedMarks, totalMarks - obtainedMarks],\n              backgroundColor: ['#3498db', '#ecf0f1'],\n              borderColor: ['#2980b9', '#bdc3c7'],\n              borderWidth: 1,\n            },\n          ],\n        };\n\n        const ctx = canvasRef.current.getContext('2d');\n        if (chartInstance) {\n          chartInstance.destroy();\n        }\n        setChartInstance(new Chart(ctx, { type: 'pie', data: chartData }));\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchData();\n  }, [chartInstance]);\n\n  return (\n    <div>\n      <h2>Chemistry All Quizzes Average</h2>\n      <canvas ref={canvasRef} width=\"100\" height=\"100\" />\n    </div>\n  );\n};\n\nexport default ChemistryPieChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExDF,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,CAAC;QACvE,MAAM;UAAEC,UAAU;UAAEC,aAAa;UAAEC;QAAW,CAAC,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACvE,MAAMC,SAAS,GAAG;UAChBC,MAAM,EAAE,CAAC,gBAAgB,EAAE,kBAAkB,CAAC;UAC9CC,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,wBAAwB;YAC/BC,IAAI,EAAE,CAACP,aAAa,EAAED,UAAU,GAAGC,aAAa,CAAC;YACjDQ,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;YACvCC,WAAW,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;YACnCC,WAAW,EAAE;UACf,CAAC;QAEL,CAAC;QAED,MAAMC,GAAG,GAAGlB,SAAS,CAACmB,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;QAC9C,IAAInB,aAAa,EAAE;UACjBA,aAAa,CAACoB,OAAO,CAAC,CAAC;QACzB;QACAnB,gBAAgB,CAAC,IAAIP,KAAK,CAACuB,GAAG,EAAE;UAAEI,IAAI,EAAE,KAAK;UAAER,IAAI,EAAEJ;QAAU,CAAC,CAAC,CAAC;MACpE,CAAC,CAAC,OAAOa,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACpB;IACF,CAAC;IACDpB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACF,aAAa,CAAC,CAAC;EAEnB,oBACEJ,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAA6B,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCjC,OAAA;MAAQkC,GAAG,EAAE/B,SAAU;MAACgC,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAxCID,iBAAiB;AAAAoC,EAAA,GAAjBpC,iBAAiB;AA0CvB,eAAeA,iBAAiB;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}