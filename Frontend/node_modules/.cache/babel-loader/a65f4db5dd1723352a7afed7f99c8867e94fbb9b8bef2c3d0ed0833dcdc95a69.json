{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sameer Shahzad\\\\Desktop\\\\quiz\\\\testing\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Bar, Pie } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport { CategoryScale } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale);\nconst Results = () => {\n  _s();\n  const [mathData, setMathData] = useState({\n    labels: ['Math'],\n    datasets: [{\n      label: 'Math Result',\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderWidth: 1,\n      hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n      hoverBorderColor: 'rgba(75,192,192,1)',\n      data: [80]\n    }]\n  });\n  const [chemistryData, setChemistryData] = useState({\n    labels: ['Chemistry'],\n    datasets: [{\n      label: 'Chemistry Result',\n      backgroundColor: 'rgba(255,99,132,0.4)',\n      borderColor: 'rgba(255,99,132,1)',\n      borderWidth: 1,\n      hoverBackgroundColor: 'rgba(255,99,132,0.6)',\n      hoverBorderColor: 'rgba(255,99,132,1)',\n      data: [90]\n    }]\n  });\n  const [physicsData, setPhysicsData] = useState({\n    labels: ['Physics'],\n    datasets: [{\n      label: 'Physics Result',\n      backgroundColor: 'rgba(54, 162, 235, 0.4)',\n      borderColor: 'rgba(54, 162, 235, 1)',\n      borderWidth: 1,\n      hoverBackgroundColor: 'rgba(54, 162, 235, 0.6)',\n      hoverBorderColor: 'rgba(54, 162, 235, 1)',\n      data: [85]\n    }]\n  });\n  const [englishData, setEnglishData] = useState({\n    labels: ['English'],\n    datasets: [{\n      label: 'English Result',\n      backgroundColor: 'rgba(153, 102, 255, 0.4)',\n      borderColor: 'rgba(153, 102, 255, 1)',\n      borderWidth: 1,\n      hoverBackgroundColor: 'rgba(153, 102, 255, 0.6)',\n      hoverBorderColor: 'rgba(153, 102, 255, 1)',\n      data: [95]\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '50%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Bar Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: {\n            labels: ['Math', 'Chemistry', 'Physics', 'English'],\n            datasets: [{\n              label: 'Obtained Marks',\n              backgroundColor: 'rgba(75,192,192,0.4)',\n              borderColor: 'rgba(75,192,192,1)',\n              borderWidth: 1,\n              hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n              hoverBorderColor: 'rgba(75,192,192,1)',\n              data: [80, 90, 85, 95]\n            }, {\n              label: 'Percentage',\n              backgroundColor: 'rgba(255, 159, 64, 0.4)',\n              borderColor: 'rgba(255, 159, 64, 1)',\n              borderWidth: 1,\n              hoverBackgroundColor: 'rgba(255, 159, 64, 0.6)',\n              hoverBorderColor: 'rgba(255, 159, 64, 1)',\n              data: [80, 90, 85, 95].map(marks => Math.round(marks / 100 * 100))\n            }]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '50%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Pie Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pie, {\n          data: {\n            labels: ['Math', 'Chemistry', 'Physics', 'English'],\n            datasets: [{\n              label: 'Obtained Marks',\n              backgroundColor: ['rgba(75,192,192,0.4)', 'rgba(255, 99, 132, 0.4)', 'rgba(54, 162, 235, 0.4)', 'rgba(255, 205, 86, 0.4)'],\n              borderColor: ['rgba(75,192,192,1)', 'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 205, 86, 1)'],\n              borderWidth: 1,\n              hoverBackgroundColor: ['rgba(75,192,192,0.6)', 'rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 205, 86, 0.6)'],\n              hoverBorderColor: ['rgba(75,192,192,1)', 'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 205, 86, 1)'],\n              data: [80, 90, 85, 95]\n            }]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Results, \"TNK2dpTp1/zzVL7QZ+aGT5Kn+0A=\");\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useState","Bar","Pie","Chart","CategoryScale","jsxDEV","_jsxDEV","register","Results","_s","mathData","setMathData","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","chemistryData","setChemistryData","physicsData","setPhysicsData","englishData","setEnglishData","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","width","map","marks","Math","round","_c","$RefreshReg$"],"sources":["C:/Users/Sameer Shahzad/Desktop/quiz/testing/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Bar, Pie } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport { CategoryScale } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\n\nChart.register(CategoryScale);\n \n\n\nconst Results = () => {\n  const [mathData, setMathData] = useState({\n    labels: ['Math'],\n    datasets: [\n      {\n        label: 'Math Result',\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n        hoverBorderColor: 'rgba(75,192,192,1)',\n        data: [80]\n      }\n    ]\n  });\n\n  const [chemistryData, setChemistryData] = useState({\n    labels: ['Chemistry'],\n    datasets: [\n      {\n        label: 'Chemistry Result',\n        backgroundColor: 'rgba(255,99,132,0.4)',\n        borderColor: 'rgba(255,99,132,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(255,99,132,0.6)',\n        hoverBorderColor: 'rgba(255,99,132,1)',\n        data: [90]\n      }\n    ]\n  });\n\n  const [physicsData, setPhysicsData] = useState({\n    labels: ['Physics'],\n    datasets: [\n      {\n        label: 'Physics Result',\n        backgroundColor: 'rgba(54, 162, 235, 0.4)',\n        borderColor: 'rgba(54, 162, 235, 1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(54, 162, 235, 0.6)',\n        hoverBorderColor: 'rgba(54, 162, 235, 1)',\n        data: [85]\n      }\n    ]\n  });\n\n  const [englishData, setEnglishData] = useState({\n    labels: ['English'],\n    datasets: [\n      {\n        label: 'English Result',\n        backgroundColor: 'rgba(153, 102, 255, 0.4)',\n        borderColor: 'rgba(153, 102, 255, 1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(153, 102, 255, 0.6)',\n        hoverBorderColor: 'rgba(153, 102, 255, 1)',\n        data: [95]\n      }\n    ]\n  });\n\n  return (\n    <div>\n      <h2>Results</h2>\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '50%' }}>\n          <h3>Bar Chart</h3>\n          <Bar\n            data={{\n              labels: ['Math', 'Chemistry', 'Physics', 'English'],\n              datasets: [\n                {\n                  label: 'Obtained Marks',\n                  backgroundColor: 'rgba(75,192,192,0.4)',\n                  borderColor: 'rgba(75,192,192,1)',\n                  borderWidth: 1,\n                  hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n                  hoverBorderColor: 'rgba(75,192,192,1)',\n                  data: [80, 90, 85, 95]\n                },\n                {\n                  label: 'Percentage',\n                  backgroundColor: 'rgba(255, 159, 64, 0.4)',\n                  borderColor: 'rgba(255, 159, 64, 1)',\n                  borderWidth: 1,\n                  hoverBackgroundColor: 'rgba(255, 159, 64, 0.6)',\n                  hoverBorderColor: 'rgba(255, 159, 64, 1)',\n                  data: [80, 90, 85, 95].map((marks) => Math.round((marks / 100) * 100))\n                }\n              ]\n            }}\n          />\n        </div>\n        <div style={{ width: '50%' }}>\n          <h3>Pie Chart</h3>\n          <Pie\n            data={{\n              labels: ['Math', 'Chemistry', 'Physics', 'English'],\n              datasets: [\n                {\n                  label: 'Obtained Marks',\n                  backgroundColor: ['rgba(75,192,192,0.4)', 'rgba(255, 99, 132, 0.4)', 'rgba(54, 162, 235, 0.4)', 'rgba(255, 205, 86, 0.4)'],\n                  borderColor: ['rgba(75,192,192,1)', 'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 205, 86, 1)'],\n                  borderWidth: 1,\n                  hoverBackgroundColor: ['rgba(75,192,192,0.6)', 'rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 205, 86, 0.6)'],\n                  hoverBorderColor: ['rgba(75,192,192,1)', 'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 205, 86, 1)'],\n                  data: [80, 90, 85, 95]\n                }\n              ]\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Results;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}