{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sameer Shahzad\\\\Desktop\\\\sa\\\\testing\\\\src\\\\component\\\\Graphs\\\\ChemistryGraphs.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport '../../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChemistryResults = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [results, setResults] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await fetch('http://localhost:5000/api/ChemistryGraphs/Graphs');\n        const data = await res.json();\n        setResults(data);\n        const chartData = {\n          labels: ['Obtained Marks'],\n          datasets: [{\n            data: [data.obtainedMarks],\n            backgroundColor: ['#36a2eb']\n          }]\n        };\n        const percentageData = {\n          labels: ['This much you are skillful', 'This much you are lacking'],\n          datasets: [{\n            data: [data.percentage, 100 - data.percentage],\n            backgroundColor: ['#36a2eb', '#ebed36']\n          }]\n        };\n\n        // Create doughnut chart for percentage of chemistry\n        const percentageChart = new Chart(document.getElementById('percentageChart'), {\n          type: 'doughnut',\n          data: percentageData,\n          options: {\n            plugins: {\n              legend: {\n                position: 'bottom'\n              }\n            }\n          }\n        });\n\n        // Create bar chart for chemistry results\n        const resultsChart = new Chart(canvasRef.current, {\n          type: 'bar',\n          data: chartData,\n          options: {\n            scales: {\n              y: {\n                beginAtZero: true,\n                max: data.totalMarks\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          }\n        });\n        return () => {\n          // Destroy charts on unmount\n          resultsChart.destroy();\n          percentageChart.destroy();\n        };\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chemistry Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"percentage-container\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"percentageChart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Obtained Marks: \", results.obtainedMarks]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Marks: \", results.totalMarks]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Percentage: \", results.percentage.toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(ChemistryResults, \"In9utGZq+axjj0kdMitLcyWg8X0=\");\n_c = ChemistryResults;\nexport default ChemistryResults;\nvar _c;\n$RefreshReg$(_c, \"ChemistryResults\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chart","jsxDEV","_jsxDEV","ChemistryResults","_s","canvasRef","results","setResults","fetchData","res","fetch","data","json","chartData","labels","datasets","obtainedMarks","backgroundColor","percentageData","percentage","percentageChart","document","getElementById","type","options","plugins","legend","position","resultsChart","current","scales","y","beginAtZero","max","totalMarks","display","destroy","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","id","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/Sameer Shahzad/Desktop/sa/testing/src/component/Graphs/ChemistryGraphs.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport Chart from 'chart.js/auto';\r\nimport '../../App.css';\r\n\r\nconst ChemistryResults = () => {\r\n  const canvasRef = useRef(null);\r\n  const [results, setResults] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const res = await fetch('http://localhost:5000/api/ChemistryGraphs/Graphs');\r\n        const data = await res.json();\r\n        setResults(data);\r\n\r\n        const chartData = {\r\n          labels: ['Obtained Marks'],\r\n          datasets: [\r\n            {\r\n              data: [data.obtainedMarks],\r\n              backgroundColor: ['#36a2eb'],\r\n            },\r\n          ],\r\n        };\r\n\r\n        const percentageData = {\r\n          labels: ['This much you are skillful', 'This much you are lacking'],\r\n          datasets: [\r\n            {\r\n              data: [data.percentage, 100 - data.percentage],\r\n              backgroundColor: ['#36a2eb', '#ebed36'],\r\n            },\r\n          ],\r\n        };\r\n\r\n        // Create doughnut chart for percentage of chemistry\r\n        const percentageChart = new Chart(document.getElementById('percentageChart'), {\r\n          type: 'doughnut',\r\n          data: percentageData,\r\n          options: {\r\n            plugins: {\r\n              legend: {\r\n                position: 'bottom',\r\n              },\r\n            },\r\n          },\r\n        });\r\n\r\n        // Create bar chart for chemistry results\r\n        const resultsChart = new Chart(canvasRef.current, {\r\n          type: 'bar',\r\n          data: chartData,\r\n          options: {\r\n            scales: {\r\n              y: {\r\n                beginAtZero: true,\r\n                max: data.totalMarks,\r\n              },\r\n            },\r\n            plugins: {\r\n              legend: {\r\n                display: false,\r\n              },\r\n            },\r\n          },\r\n        });\r\n        \r\n        return () => {\r\n          // Destroy charts on unmount\r\n          resultsChart.destroy();\r\n          percentageChart.destroy();\r\n        };\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Chemistry Results</h2>\r\n      {results && (\r\n        <div className=\"results-container\">\r\n          <div className=\"chart-container\">\r\n            <canvas ref={canvasRef} />\r\n          </div>\r\n          <div className=\"percentage-container\">\r\n            <canvas id=\"percentageChart\" />\r\n          </div>\r\n          <div className=\"stats-container\">\r\n            <p>Obtained Marks: {results.obtainedMarks}</p>\r\n            <p>Total Marks: {results.totalMarks}</p>\r\n            <p>Percentage: {results.percentage.toFixed(2)}%</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChemistryResults;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}